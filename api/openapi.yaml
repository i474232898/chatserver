openapi: 3.0.0
info:
  title: Chat Server API
  version: 1.0.0
  description: API for the Chat Server application

servers:
  - url: http://localhost:8080

paths:
  /auth/signup:
    post:
      summary: Register a new user
      description: Creates a new user account in the system
      operationId: signup
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignupRequest'
      responses:
        '200':
          description: User successfully registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignupResponse'

  /auth/signin:
    post:
      summary: Login user
      description: Authenticate user with email and password
      operationId: signin
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SigninRequest'
      responses:
        '200':
          description: User successfully authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SigninResponse'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid email or password"

  /user/me:
    get:
      summary: Get current user information
      description: Returns basic information about the currently authenticated user
      operationId: getCurrentUser
      tags:
        - User
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User information retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /rooms:
    post:
      summary: Create a new chat room
      description: Creates a new chat room with the specified name
      operationId: createRoom
      tags:
        - Rooms
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the chat room
                  example: "General Discussion"
                memberIDs:
                  type: array
                  description: List of user IDs to add as members to the room
                  items:
                    type: integer
                    format: int64
                  example: [123, 456, 789]
              required:
                - name
      responses:
        '201':
          description: Chat room successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewRoomResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
    get:
      summary: List all chat rooms
      description: Returns a list of chat rooms the authenticated user is a member of
      operationId: listRooms
      tags:
        - Rooms
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of chat rooms retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomsListResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /rooms/direct:
    post:
      summary: Create a direct chat room with a user
      description: Creates a direct chat room between the authenticated user and the specified user
      operationId: createDirectRoom
      tags:
        - Rooms
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDirectRoomRequest'
      responses:
        '201':
          description: Direct chat room successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewRoomResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    SignupRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
          minLength: 8
      required:
        - email
        - password

    SignupResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        email:
          type: string
          example: "abc@email.com"

    SigninRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
      required:
        - email
        - password

    SigninResponse:
      type: object
      properties:

        token:
          type: string
          description: JWT authentication token
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."

    UserInfo:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        email:
          type: string
          format: email
          example: "user@example.com"
        createdAt:
          type: string
          format: date-time
          example: "2024-03-20T10:00:00Z"
      required:
        - id
        - email

    NewRoomResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: "General Discussion"
        createdAt:
          type: string
          format: date-time
          example: "2024-03-20T10:00:00Z"

    CreateDirectRoomRequest:
      type: object
      properties:
        userID:
          type: integer
          format: int64
          description: ID of the user to start a direct chat with
          example: 456
      required:
        - userID

    RoomsListResponse:
      type: object
      properties:
        rooms:
          type: array
          items:
            $ref: '#/components/schemas/Room'
      required:
        - rooms

    Room:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: "General Discussion"
        createdAt:
          type: string
          format: date-time
          example: "2024-03-20T10:00:00Z"
        isDirect:
          type: boolean
          description: Whether this room is a direct chat
          example: false
        members:
          type: array
          items:
            $ref: '#/components/schemas/UserInfo'
      required:
        - id
        - name
        - createdAt
        - isDirect
        - members

  responses:
    UnauthorizedError:
      description: Unauthorized - Invalid or missing token
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Unauthorized - Invalid token" 
