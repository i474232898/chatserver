// Package types provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package types

import (
	"time"

	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	BearerAuthScopes = "bearerAuth.Scopes"
)

// CreateDirectRoomRequest defines model for CreateDirectRoomRequest.
type CreateDirectRoomRequest struct {
	// UserID ID of the user to start a direct chat with
	UserID int64 `json:"userID"`
}

// CreateRoomRequest defines model for CreateRoomRequest.
type CreateRoomRequest struct {
	// MemberIDs List of user IDs to add as members to the room
	MemberIDs []int64 `json:"memberIDs"`

	// Name Name of the chat room
	Name string `json:"name"`
}

// NewRoomResponse defines model for NewRoomResponse.
type NewRoomResponse struct {
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	Id        *int64     `json:"id,omitempty"`
	Name      *string    `json:"name,omitempty"`
}

// Room defines model for Room.
type Room struct {
	CreatedAt time.Time `json:"createdAt"`
	Id        int64     `json:"id"`

	// IsDirect Whether this room is a direct chat
	IsDirect bool       `json:"isDirect"`
	Members  []UserInfo `json:"members"`
	Name     string     `json:"name"`
}

// RoomsListResponse defines model for RoomsListResponse.
type RoomsListResponse = []Room

// SigninRequest defines model for SigninRequest.
type SigninRequest struct {
	Email    openapi_types.Email `json:"email"`
	Password string              `json:"password"`
}

// SigninResponse defines model for SigninResponse.
type SigninResponse struct {
	// Token JWT authentication token
	Token *string `json:"token,omitempty"`
}

// SignupRequest defines model for SignupRequest.
type SignupRequest struct {
	Email    openapi_types.Email `json:"email"`
	Password string              `json:"password"`
}

// SignupResponse defines model for SignupResponse.
type SignupResponse struct {
	Email *string `json:"email,omitempty"`
	Id    *int64  `json:"id,omitempty"`
}

// UserInfo defines model for UserInfo.
type UserInfo struct {
	CreatedAt *time.Time          `json:"createdAt,omitempty"`
	Email     openapi_types.Email `json:"email"`
	Id        int64               `json:"id"`
}

// ValidationError defines model for ValidationError.
type ValidationError struct {
	// Field The field that failed validation
	Field string `json:"field"`

	// Message The validation error message
	Message string `json:"message"`
}

// BadRequestError defines model for BadRequestError.
type BadRequestError = []ValidationError

// UnauthorizedError defines model for UnauthorizedError.
type UnauthorizedError struct {
	Error *string `json:"error,omitempty"`
}

// SigninJSONRequestBody defines body for Signin for application/json ContentType.
type SigninJSONRequestBody = SigninRequest

// SignupJSONRequestBody defines body for Signup for application/json ContentType.
type SignupJSONRequestBody = SignupRequest

// CreateRoomJSONRequestBody defines body for CreateRoom for application/json ContentType.
type CreateRoomJSONRequestBody = CreateRoomRequest

// CreateDirectRoomJSONRequestBody defines body for CreateDirectRoom for application/json ContentType.
type CreateDirectRoomJSONRequestBody = CreateDirectRoomRequest
